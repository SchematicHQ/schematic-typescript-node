/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpsertUserRequestBody
 */
export interface UpsertUserRequestBody {
    /**
     * Optionally specify company using key/value pairs
     * @type {object}
     * @memberof UpsertUserRequestBody
     */
    company: object;
    /**
     * Optionally specify company using Schematic company ID
     * @type {string}
     * @memberof UpsertUserRequestBody
     */
    companyId?: string;
    /**
     * 
     * @type {object}
     * @memberof UpsertUserRequestBody
     */
    keys: object;
    /**
     * 
     * @type {Date}
     * @memberof UpsertUserRequestBody
     */
    lastSeenAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpsertUserRequestBody
     */
    name?: string;
    /**
     * A map of trait names to trait values
     * @type {object}
     * @memberof UpsertUserRequestBody
     */
    traits?: object;
    /**
     * 
     * @type {boolean}
     * @memberof UpsertUserRequestBody
     */
    updateOnly?: boolean;
}

/**
 * Check if a given object implements the UpsertUserRequestBody interface.
 */
export function instanceOfUpsertUserRequestBody(value: object): boolean {
    if (!('company' in value)) return false;
    if (!('keys' in value)) return false;
    return true;
}

export function UpsertUserRequestBodyFromJSON(json: any): UpsertUserRequestBody {
    return UpsertUserRequestBodyFromJSONTyped(json, false);
}

export function UpsertUserRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertUserRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'company': json['company'],
        'companyId': json['company_id'] == null ? undefined : json['company_id'],
        'keys': json['keys'],
        'lastSeenAt': json['last_seen_at'] == null ? undefined : (new Date(json['last_seen_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'traits': json['traits'] == null ? undefined : json['traits'],
        'updateOnly': json['update_only'] == null ? undefined : json['update_only'],
    };
}

export function UpsertUserRequestBodyToJSON(value?: UpsertUserRequestBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'company': value['company'],
        'company_id': value['companyId'],
        'keys': value['keys'],
        'last_seen_at': value['lastSeenAt'] == null ? undefined : ((value['lastSeenAt'] as any).toISOString()),
        'name': value['name'],
        'traits': value['traits'],
        'update_only': value['updateOnly'],
    };
}

