/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The updated resource
 * @export
 * @interface CompanyOverrideResponseData
 */
export interface CompanyOverrideResponseData {
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    companyId: string;
    /**
     * 
     * @type {Date}
     * @memberof CompanyOverrideResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    featureId: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    metricPeriod?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    ruleId: string;
    /**
     * 
     * @type {Date}
     * @memberof CompanyOverrideResponseData
     */
    updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyOverrideResponseData
     */
    valueBool?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof CompanyOverrideResponseData
     */
    valueNumeric?: number | null;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    valueTraitId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompanyOverrideResponseData
     */
    valueType: string;
}

/**
 * Check if a given object implements the CompanyOverrideResponseData interface.
 */
export function instanceOfCompanyOverrideResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "companyId" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "featureId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "ruleId" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "valueType" in value;

    return isInstance;
}

export function CompanyOverrideResponseDataFromJSON(json: any): CompanyOverrideResponseData {
    return CompanyOverrideResponseDataFromJSONTyped(json, false);
}

export function CompanyOverrideResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyOverrideResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyId': json['company_id'],
        'createdAt': (new Date(json['created_at'])),
        'environmentId': json['environment_id'],
        'featureId': json['feature_id'],
        'id': json['id'],
        'metricPeriod': !exists(json, 'metric_period') ? undefined : json['metric_period'],
        'ruleId': json['rule_id'],
        'updatedAt': (new Date(json['updated_at'])),
        'valueBool': !exists(json, 'value_bool') ? undefined : json['value_bool'],
        'valueNumeric': !exists(json, 'value_numeric') ? undefined : json['value_numeric'],
        'valueTraitId': !exists(json, 'value_trait_id') ? undefined : json['value_trait_id'],
        'valueType': json['value_type'],
    };
}

export function CompanyOverrideResponseDataToJSON(value?: CompanyOverrideResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_id': value.companyId,
        'created_at': (value.createdAt.toISOString()),
        'environment_id': value.environmentId,
        'feature_id': value.featureId,
        'id': value.id,
        'metric_period': value.metricPeriod,
        'rule_id': value.ruleId,
        'updated_at': (value.updatedAt.toISOString()),
        'value_bool': value.valueBool,
        'value_numeric': value.valueNumeric,
        'value_trait_id': value.valueTraitId,
        'value_type': value.valueType,
    };
}

