/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureResponseData } from './FeatureResponseData';
import {
    FeatureResponseDataFromJSON,
    FeatureResponseDataFromJSONTyped,
    FeatureResponseDataToJSON,
} from './FeatureResponseData';
import type { FlagCheckLogResponseData } from './FlagCheckLogResponseData';
import {
    FlagCheckLogResponseDataFromJSON,
    FlagCheckLogResponseDataFromJSONTyped,
    FlagCheckLogResponseDataToJSON,
} from './FlagCheckLogResponseData';
import type { RuleDetailResponseData } from './RuleDetailResponseData';
import {
    RuleDetailResponseDataFromJSON,
    RuleDetailResponseDataFromJSONTyped,
    RuleDetailResponseDataToJSON,
} from './RuleDetailResponseData';

/**
 * 
 * @export
 * @interface FlagDetailResponseData
 */
export interface FlagDetailResponseData {
    /**
     * 
     * @type {Date}
     * @memberof FlagDetailResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof FlagDetailResponseData
     */
    defaultValue: boolean;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    description: string;
    /**
     * 
     * @type {FeatureResponseData}
     * @memberof FlagDetailResponseData
     */
    feature?: FeatureResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    featureId?: string;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    flagType: string;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    key: string;
    /**
     * 
     * @type {FlagCheckLogResponseData}
     * @memberof FlagDetailResponseData
     */
    latestCheck?: FlagCheckLogResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagDetailResponseData
     */
    name: string;
    /**
     * 
     * @type {Array<RuleDetailResponseData>}
     * @memberof FlagDetailResponseData
     */
    rules: Array<RuleDetailResponseData>;
    /**
     * 
     * @type {Date}
     * @memberof FlagDetailResponseData
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the FlagDetailResponseData interface.
 */
export function instanceOfFlagDetailResponseData(value: object): boolean {
    if (!('createdAt' in value)) return false;
    if (!('defaultValue' in value)) return false;
    if (!('description' in value)) return false;
    if (!('flagType' in value)) return false;
    if (!('id' in value)) return false;
    if (!('key' in value)) return false;
    if (!('name' in value)) return false;
    if (!('rules' in value)) return false;
    if (!('updatedAt' in value)) return false;
    return true;
}

export function FlagDetailResponseDataFromJSON(json: any): FlagDetailResponseData {
    return FlagDetailResponseDataFromJSONTyped(json, false);
}

export function FlagDetailResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlagDetailResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'defaultValue': json['default_value'],
        'description': json['description'],
        'feature': json['feature'] == null ? undefined : FeatureResponseDataFromJSON(json['feature']),
        'featureId': json['feature_id'] == null ? undefined : json['feature_id'],
        'flagType': json['flag_type'],
        'id': json['id'],
        'key': json['key'],
        'latestCheck': json['latest_check'] == null ? undefined : FlagCheckLogResponseDataFromJSON(json['latest_check']),
        'name': json['name'],
        'rules': ((json['rules'] as Array<any>).map(RuleDetailResponseDataFromJSON)),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function FlagDetailResponseDataToJSON(value?: FlagDetailResponseData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'default_value': value['defaultValue'],
        'description': value['description'],
        'feature': FeatureResponseDataToJSON(value['feature']),
        'feature_id': value['featureId'],
        'flag_type': value['flagType'],
        'id': value['id'],
        'key': value['key'],
        'latest_check': FlagCheckLogResponseDataToJSON(value['latestCheck']),
        'name': value['name'],
        'rules': ((value['rules'] as Array<any>).map(RuleDetailResponseDataToJSON)),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

