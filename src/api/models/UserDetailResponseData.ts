/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyMembershipDetailResponseData } from './CompanyMembershipDetailResponseData';
import {
    CompanyMembershipDetailResponseDataFromJSON,
    CompanyMembershipDetailResponseDataFromJSONTyped,
    CompanyMembershipDetailResponseDataToJSON,
} from './CompanyMembershipDetailResponseData';
import type { EntityKeyResponseData } from './EntityKeyResponseData';
import {
    EntityKeyResponseDataFromJSON,
    EntityKeyResponseDataFromJSONTyped,
    EntityKeyResponseDataToJSON,
} from './EntityKeyResponseData';

/**
 * The returned resource
 * @export
 * @interface UserDetailResponseData
 */
export interface UserDetailResponseData {
    /**
     * 
     * @type {Array<CompanyMembershipDetailResponseData>}
     * @memberof UserDetailResponseData
     */
    companyMemberships: Array<CompanyMembershipDetailResponseData>;
    /**
     * 
     * @type {Date}
     * @memberof UserDetailResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserDetailResponseData
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailResponseData
     */
    id: string;
    /**
     * 
     * @type {Array<EntityKeyResponseData>}
     * @memberof UserDetailResponseData
     */
    keys: Array<EntityKeyResponseData>;
    /**
     * 
     * @type {Date}
     * @memberof UserDetailResponseData
     */
    lastSeenAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserDetailResponseData
     */
    name: string;
    /**
     * A map of trait names to trait values
     * @type {object}
     * @memberof UserDetailResponseData
     */
    traits?: object;
    /**
     * 
     * @type {Date}
     * @memberof UserDetailResponseData
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the UserDetailResponseData interface.
 */
export function instanceOfUserDetailResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "companyMemberships" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "keys" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function UserDetailResponseDataFromJSON(json: any): UserDetailResponseData {
    return UserDetailResponseDataFromJSONTyped(json, false);
}

export function UserDetailResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetailResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyMemberships': ((json['company_memberships'] as Array<any>).map(CompanyMembershipDetailResponseDataFromJSON)),
        'createdAt': (new Date(json['created_at'])),
        'environmentId': json['environment_id'],
        'id': json['id'],
        'keys': ((json['keys'] as Array<any>).map(EntityKeyResponseDataFromJSON)),
        'lastSeenAt': !exists(json, 'last_seen_at') ? undefined : (json['last_seen_at'] === null ? null : new Date(json['last_seen_at'])),
        'name': json['name'],
        'traits': !exists(json, 'traits') ? undefined : json['traits'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function UserDetailResponseDataToJSON(value?: UserDetailResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_memberships': ((value.companyMemberships as Array<any>).map(CompanyMembershipDetailResponseDataToJSON)),
        'created_at': (value.createdAt.toISOString()),
        'environment_id': value.environmentId,
        'id': value.id,
        'keys': ((value.keys as Array<any>).map(EntityKeyResponseDataToJSON)),
        'last_seen_at': value.lastSeenAt === undefined ? undefined : (value.lastSeenAt === null ? null : value.lastSeenAt.toISOString()),
        'name': value.name,
        'traits': value.traits,
        'updated_at': (value.updatedAt.toISOString()),
    };
}

