/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyResponseData } from './CompanyResponseData';
import {
    CompanyResponseDataFromJSON,
    CompanyResponseDataFromJSONTyped,
    CompanyResponseDataToJSON,
} from './CompanyResponseData';
import type { EnvironmentResponseData } from './EnvironmentResponseData';
import {
    EnvironmentResponseDataFromJSON,
    EnvironmentResponseDataFromJSONTyped,
    EnvironmentResponseDataToJSON,
} from './EnvironmentResponseData';
import type { FlagResponseData } from './FlagResponseData';
import {
    FlagResponseDataFromJSON,
    FlagResponseDataFromJSONTyped,
    FlagResponseDataToJSON,
} from './FlagResponseData';
import type { RuleResponseData } from './RuleResponseData';
import {
    RuleResponseDataFromJSON,
    RuleResponseDataFromJSONTyped,
    RuleResponseDataToJSON,
} from './RuleResponseData';
import type { UserResponseData } from './UserResponseData';
import {
    UserResponseDataFromJSON,
    UserResponseDataFromJSONTyped,
    UserResponseDataToJSON,
} from './UserResponseData';

/**
 * 
 * @export
 * @interface FlagCheckLogDetailResponseData
 */
export interface FlagCheckLogDetailResponseData {
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    checkStatus: string;
    /**
     * 
     * @type {CompanyResponseData}
     * @memberof FlagCheckLogDetailResponseData
     */
    company?: CompanyResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    companyId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FlagCheckLogDetailResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {EnvironmentResponseData}
     * @memberof FlagCheckLogDetailResponseData
     */
    environment?: EnvironmentResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    error?: string | null;
    /**
     * 
     * @type {FlagResponseData}
     * @memberof FlagCheckLogDetailResponseData
     */
    flag?: FlagResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    flagId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    flagKey: string;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    reason: string;
    /**
     * 
     * @type {object}
     * @memberof FlagCheckLogDetailResponseData
     */
    reqCompany: object;
    /**
     * 
     * @type {object}
     * @memberof FlagCheckLogDetailResponseData
     */
    reqUser: object;
    /**
     * 
     * @type {RuleResponseData}
     * @memberof FlagCheckLogDetailResponseData
     */
    rule?: RuleResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    ruleId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FlagCheckLogDetailResponseData
     */
    updatedAt: Date;
    /**
     * 
     * @type {UserResponseData}
     * @memberof FlagCheckLogDetailResponseData
     */
    user?: UserResponseData;
    /**
     * 
     * @type {string}
     * @memberof FlagCheckLogDetailResponseData
     */
    userId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FlagCheckLogDetailResponseData
     */
    value: boolean;
}

/**
 * Check if a given object implements the FlagCheckLogDetailResponseData interface.
 */
export function instanceOfFlagCheckLogDetailResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "checkStatus" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "flagKey" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "reqCompany" in value;
    isInstance = isInstance && "reqUser" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function FlagCheckLogDetailResponseDataFromJSON(json: any): FlagCheckLogDetailResponseData {
    return FlagCheckLogDetailResponseDataFromJSONTyped(json, false);
}

export function FlagCheckLogDetailResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlagCheckLogDetailResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checkStatus': json['check_status'],
        'company': !exists(json, 'company') ? undefined : CompanyResponseDataFromJSON(json['company']),
        'companyId': !exists(json, 'company_id') ? undefined : json['company_id'],
        'createdAt': (new Date(json['created_at'])),
        'environment': !exists(json, 'environment') ? undefined : EnvironmentResponseDataFromJSON(json['environment']),
        'environmentId': json['environment_id'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'flag': !exists(json, 'flag') ? undefined : FlagResponseDataFromJSON(json['flag']),
        'flagId': !exists(json, 'flag_id') ? undefined : json['flag_id'],
        'flagKey': json['flag_key'],
        'id': json['id'],
        'reason': json['reason'],
        'reqCompany': json['req_company'],
        'reqUser': json['req_user'],
        'rule': !exists(json, 'rule') ? undefined : RuleResponseDataFromJSON(json['rule']),
        'ruleId': !exists(json, 'rule_id') ? undefined : json['rule_id'],
        'updatedAt': (new Date(json['updated_at'])),
        'user': !exists(json, 'user') ? undefined : UserResponseDataFromJSON(json['user']),
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'value': json['value'],
    };
}

export function FlagCheckLogDetailResponseDataToJSON(value?: FlagCheckLogDetailResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'check_status': value.checkStatus,
        'company': CompanyResponseDataToJSON(value.company),
        'company_id': value.companyId,
        'created_at': (value.createdAt.toISOString()),
        'environment': EnvironmentResponseDataToJSON(value.environment),
        'environment_id': value.environmentId,
        'error': value.error,
        'flag': FlagResponseDataToJSON(value.flag),
        'flag_id': value.flagId,
        'flag_key': value.flagKey,
        'id': value.id,
        'reason': value.reason,
        'req_company': value.reqCompany,
        'req_user': value.reqUser,
        'rule': RuleResponseDataToJSON(value.rule),
        'rule_id': value.ruleId,
        'updated_at': (value.updatedAt.toISOString()),
        'user': UserResponseDataToJSON(value.user),
        'user_id': value.userId,
        'value': value.value,
    };
}

