/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityFlagValueResponseData } from './EntityFlagValueResponseData';
import {
    EntityFlagValueResponseDataFromJSON,
    EntityFlagValueResponseDataFromJSONTyped,
    EntityFlagValueResponseDataToJSON,
} from './EntityFlagValueResponseData';
import type { ListFlagValuesParams } from './ListFlagValuesParams';
import {
    ListFlagValuesParamsFromJSON,
    ListFlagValuesParamsFromJSONTyped,
    ListFlagValuesParamsToJSON,
} from './ListFlagValuesParams';

/**
 * 
 * @export
 * @interface ListFlagValuesResponse
 */
export interface ListFlagValuesResponse {
    /**
     * The returned resources
     * @type {Array<EntityFlagValueResponseData>}
     * @memberof ListFlagValuesResponse
     */
    data: Array<EntityFlagValueResponseData>;
    /**
     * 
     * @type {ListFlagValuesParams}
     * @memberof ListFlagValuesResponse
     */
    params: ListFlagValuesParams;
}

/**
 * Check if a given object implements the ListFlagValuesResponse interface.
 */
export function instanceOfListFlagValuesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "params" in value;

    return isInstance;
}

export function ListFlagValuesResponseFromJSON(json: any): ListFlagValuesResponse {
    return ListFlagValuesResponseFromJSONTyped(json, false);
}

export function ListFlagValuesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListFlagValuesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(EntityFlagValueResponseDataFromJSON)),
        'params': ListFlagValuesParamsFromJSON(json['params']),
    };
}

export function ListFlagValuesResponseToJSON(value?: ListFlagValuesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(EntityFlagValueResponseDataToJSON)),
        'params': ListFlagValuesParamsToJSON(value.params),
    };
}

