/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EventListResponseData } from './EventListResponseData';
import {
    EventListResponseDataFromJSON,
    EventListResponseDataFromJSONTyped,
    EventListResponseDataToJSON,
} from './EventListResponseData';
import type { ListEventsParams } from './ListEventsParams';
import {
    ListEventsParamsFromJSON,
    ListEventsParamsFromJSONTyped,
    ListEventsParamsToJSON,
} from './ListEventsParams';

/**
 * 
 * @export
 * @interface ListEventsResponse
 */
export interface ListEventsResponse {
    /**
     * The returned resources
     * @type {Array<EventListResponseData>}
     * @memberof ListEventsResponse
     */
    data: Array<EventListResponseData>;
    /**
     * 
     * @type {ListEventsParams}
     * @memberof ListEventsResponse
     */
    params: ListEventsParams;
}

/**
 * Check if a given object implements the ListEventsResponse interface.
 */
export function instanceOfListEventsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "params" in value;

    return isInstance;
}

export function ListEventsResponseFromJSON(json: any): ListEventsResponse {
    return ListEventsResponseFromJSONTyped(json, false);
}

export function ListEventsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListEventsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(EventListResponseDataFromJSON)),
        'params': ListEventsParamsFromJSON(json['params']),
    };
}

export function ListEventsResponseToJSON(value?: ListEventsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(EventListResponseDataToJSON)),
        'params': ListEventsParamsToJSON(value.params),
    };
}

