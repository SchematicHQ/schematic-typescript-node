/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CreateBillingProductRequestBody
 */
export interface CreateBillingProductRequestBody {
  /**
   *
   * @type {string}
   * @memberof CreateBillingProductRequestBody
   */
  currency: string;
  /**
   *
   * @type {string}
   * @memberof CreateBillingProductRequestBody
   */
  externalId: string;
  /**
   *
   * @type {string}
   * @memberof CreateBillingProductRequestBody
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof CreateBillingProductRequestBody
   */
  price: number;
  /**
   *
   * @type {number}
   * @memberof CreateBillingProductRequestBody
   */
  quantity: number;
}

/**
 * Check if a given object implements the CreateBillingProductRequestBody interface.
 */
export function instanceOfCreateBillingProductRequestBody(
  value: object,
): boolean {
  if (!("currency" in value)) return false;
  if (!("externalId" in value)) return false;
  if (!("name" in value)) return false;
  if (!("price" in value)) return false;
  if (!("quantity" in value)) return false;
  return true;
}

export function CreateBillingProductRequestBodyFromJSON(
  json: any,
): CreateBillingProductRequestBody {
  return CreateBillingProductRequestBodyFromJSONTyped(json, false);
}

export function CreateBillingProductRequestBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateBillingProductRequestBody {
  if (json == null) {
    return json;
  }
  return {
    currency: json["currency"],
    externalId: json["external_id"],
    name: json["name"],
    price: json["price"],
    quantity: json["quantity"],
  };
}

export function CreateBillingProductRequestBodyToJSON(
  value?: CreateBillingProductRequestBody | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    currency: value["currency"],
    external_id: value["externalId"],
    name: value["name"],
    price: value["price"],
    quantity: value["quantity"],
  };
}
