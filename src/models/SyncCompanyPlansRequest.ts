/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SyncCompanyPlansRequestPlansInner } from './SyncCompanyPlansRequestPlansInner';
import {
    SyncCompanyPlansRequestPlansInnerFromJSON,
    SyncCompanyPlansRequestPlansInnerFromJSONTyped,
    SyncCompanyPlansRequestPlansInnerToJSON,
} from './SyncCompanyPlansRequestPlansInner';

/**
 * 
 * @export
 * @interface SyncCompanyPlansRequest
 */
export interface SyncCompanyPlansRequest {
    /**
     * 
     * @type {string}
     * @memberof SyncCompanyPlansRequest
     */
    companyId?: string;
    /**
     * 
     * @type {string}
     * @memberof SyncCompanyPlansRequest
     */
    planId?: string;
    /**
     * 
     * @type {Array<SyncCompanyPlansRequestPlansInner>}
     * @memberof SyncCompanyPlansRequest
     */
    plans?: Array<SyncCompanyPlansRequestPlansInner>;
}

/**
 * Check if a given object implements the SyncCompanyPlansRequest interface.
 */
export function instanceOfSyncCompanyPlansRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SyncCompanyPlansRequestFromJSON(json: any): SyncCompanyPlansRequest {
    return SyncCompanyPlansRequestFromJSONTyped(json, false);
}

export function SyncCompanyPlansRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncCompanyPlansRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyId': !exists(json, 'company_id') ? undefined : json['company_id'],
        'planId': !exists(json, 'plan_id') ? undefined : json['plan_id'],
        'plans': !exists(json, 'plans') ? undefined : ((json['plans'] as Array<any>).map(SyncCompanyPlansRequestPlansInnerFromJSON)),
    };
}

export function SyncCompanyPlansRequestToJSON(value?: SyncCompanyPlansRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_id': value.companyId,
        'plan_id': value.planId,
        'plans': value.plans === undefined ? undefined : ((value.plans as Array<any>).map(SyncCompanyPlansRequestPlansInnerToJSON)),
    };
}

