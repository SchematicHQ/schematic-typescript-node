/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateEventRequestBodyOneOf1Company } from './CreateEventRequestBodyOneOf1Company';
import {
    CreateEventRequestBodyOneOf1CompanyFromJSON,
    CreateEventRequestBodyOneOf1CompanyFromJSONTyped,
    CreateEventRequestBodyOneOf1CompanyToJSON,
} from './CreateEventRequestBodyOneOf1Company';

/**
 * 
 * @export
 * @interface CreateEventRequestBodyOneOf1
 */
export interface CreateEventRequestBodyOneOf1 {
    /**
     * 
     * @type {CreateEventRequestBodyOneOf1Company}
     * @memberof CreateEventRequestBodyOneOf1
     */
    company?: CreateEventRequestBodyOneOf1Company;
    /**
     * Key-value pairs to identify the user
     * @type {object}
     * @memberof CreateEventRequestBodyOneOf1
     */
    keys?: object;
    /**
     * The display name of the user being identified; required only if it is a new user
     * @type {string}
     * @memberof CreateEventRequestBodyOneOf1
     */
    name?: string;
    /**
     * A map of user trait names to trait values
     * @type {object}
     * @memberof CreateEventRequestBodyOneOf1
     */
    traits?: object;
}

/**
 * Check if a given object implements the CreateEventRequestBodyOneOf1 interface.
 */
export function instanceOfCreateEventRequestBodyOneOf1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateEventRequestBodyOneOf1FromJSON(json: any): CreateEventRequestBodyOneOf1 {
    return CreateEventRequestBodyOneOf1FromJSONTyped(json, false);
}

export function CreateEventRequestBodyOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEventRequestBodyOneOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': !exists(json, 'company') ? undefined : CreateEventRequestBodyOneOf1CompanyFromJSON(json['company']),
        'keys': !exists(json, 'keys') ? undefined : json['keys'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'traits': !exists(json, 'traits') ? undefined : json['traits'],
    };
}

export function CreateEventRequestBodyOneOf1ToJSON(value?: CreateEventRequestBodyOneOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': CreateEventRequestBodyOneOf1CompanyToJSON(value.company),
        'keys': value.keys,
        'name': value.name,
        'traits': value.traits,
    };
}

