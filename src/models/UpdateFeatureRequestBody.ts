/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateOrUpdateFlagRequestBody } from './CreateOrUpdateFlagRequestBody';
import {
    CreateOrUpdateFlagRequestBodyFromJSON,
    CreateOrUpdateFlagRequestBodyFromJSONTyped,
    CreateOrUpdateFlagRequestBodyToJSON,
} from './CreateOrUpdateFlagRequestBody';

/**
 * 
 * @export
 * @interface UpdateFeatureRequestBody
 */
export interface UpdateFeatureRequestBody {
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureRequestBody
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureRequestBody
     */
    eventSubtype?: string;
    /**
     * 
     * @type {CreateOrUpdateFlagRequestBody}
     * @memberof UpdateFeatureRequestBody
     */
    flag?: CreateOrUpdateFlagRequestBody;
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureRequestBody
     */
    lifecyclePhase?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureRequestBody
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFeatureRequestBody
     */
    skipWebhooks: boolean;
}

/**
 * Check if a given object implements the UpdateFeatureRequestBody interface.
 */
export function instanceOfUpdateFeatureRequestBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "skipWebhooks" in value;

    return isInstance;
}

export function UpdateFeatureRequestBodyFromJSON(json: any): UpdateFeatureRequestBody {
    return UpdateFeatureRequestBodyFromJSONTyped(json, false);
}

export function UpdateFeatureRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFeatureRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'eventSubtype': !exists(json, 'event_subtype') ? undefined : json['event_subtype'],
        'flag': !exists(json, 'flag') ? undefined : CreateOrUpdateFlagRequestBodyFromJSON(json['flag']),
        'lifecyclePhase': !exists(json, 'lifecycle_phase') ? undefined : json['lifecycle_phase'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'skipWebhooks': json['skip_webhooks'],
    };
}

export function UpdateFeatureRequestBodyToJSON(value?: UpdateFeatureRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'event_subtype': value.eventSubtype,
        'flag': CreateOrUpdateFlagRequestBodyToJSON(value.flag),
        'lifecycle_phase': value.lifecyclePhase,
        'name': value.name,
        'skip_webhooks': value.skipWebhooks,
    };
}

