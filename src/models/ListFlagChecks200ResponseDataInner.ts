/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListFlagChecks200ResponseDataInner
 */
export interface ListFlagChecks200ResponseDataInner {
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    companyId?: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    flagId?: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    flagKey: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    reason: string;
    /**
     * 
     * @type {object}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    reqCompany: object;
    /**
     * 
     * @type {object}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    reqUser: object;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    ruleId?: string;
    /**
     * 
     * @type {string}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    userId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ListFlagChecks200ResponseDataInner
     */
    value: boolean;
}

/**
 * Check if a given object implements the ListFlagChecks200ResponseDataInner interface.
 */
export function instanceOfListFlagChecks200ResponseDataInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "flagKey" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "reqCompany" in value;
    isInstance = isInstance && "reqUser" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function ListFlagChecks200ResponseDataInnerFromJSON(json: any): ListFlagChecks200ResponseDataInner {
    return ListFlagChecks200ResponseDataInnerFromJSONTyped(json, false);
}

export function ListFlagChecks200ResponseDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListFlagChecks200ResponseDataInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyId': !exists(json, 'company_id') ? undefined : json['company_id'],
        'environmentId': json['environment_id'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'flagId': !exists(json, 'flag_id') ? undefined : json['flag_id'],
        'flagKey': json['flag_key'],
        'id': json['id'],
        'reason': json['reason'],
        'reqCompany': json['req_company'],
        'reqUser': json['req_user'],
        'ruleId': !exists(json, 'rule_id') ? undefined : json['rule_id'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'value': json['value'],
    };
}

export function ListFlagChecks200ResponseDataInnerToJSON(value?: ListFlagChecks200ResponseDataInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_id': value.companyId,
        'environment_id': value.environmentId,
        'error': value.error,
        'flag_id': value.flagId,
        'flag_key': value.flagKey,
        'id': value.id,
        'reason': value.reason,
        'req_company': value.reqCompany,
        'req_user': value.reqUser,
        'rule_id': value.ruleId,
        'user_id': value.userId,
        'value': value.value,
    };
}

