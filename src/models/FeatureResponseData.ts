/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureResponseData
 */
export interface FeatureResponseData {
    /**
     * 
     * @type {Date}
     * @memberof FeatureResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof FeatureResponseData
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof FeatureResponseData
     */
    eventSubtype?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeatureResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FeatureResponseData
     */
    lifecyclePhase?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeatureResponseData
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof FeatureResponseData
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the FeatureResponseData interface.
 */
export function instanceOfFeatureResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function FeatureResponseDataFromJSON(json: any): FeatureResponseData {
    return FeatureResponseDataFromJSONTyped(json, false);
}

export function FeatureResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'],
        'eventSubtype': !exists(json, 'event_subtype') ? undefined : json['event_subtype'],
        'id': json['id'],
        'lifecyclePhase': !exists(json, 'lifecycle_phase') ? undefined : json['lifecycle_phase'],
        'name': json['name'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function FeatureResponseDataToJSON(value?: FeatureResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': (value.createdAt.toISOString()),
        'description': value.description,
        'event_subtype': value.eventSubtype,
        'id': value.id,
        'lifecycle_phase': value.lifecyclePhase,
        'name': value.name,
        'updated_at': (value.updatedAt.toISOString()),
    };
}

