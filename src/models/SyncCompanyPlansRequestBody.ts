/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateOrUpdateCompanyPlanRequestBody } from './CreateOrUpdateCompanyPlanRequestBody';
import {
    CreateOrUpdateCompanyPlanRequestBodyFromJSON,
    CreateOrUpdateCompanyPlanRequestBodyFromJSONTyped,
    CreateOrUpdateCompanyPlanRequestBodyToJSON,
} from './CreateOrUpdateCompanyPlanRequestBody';

/**
 * 
 * @export
 * @interface SyncCompanyPlansRequestBody
 */
export interface SyncCompanyPlansRequestBody {
    /**
     * 
     * @type {string}
     * @memberof SyncCompanyPlansRequestBody
     */
    companyId?: string;
    /**
     * 
     * @type {string}
     * @memberof SyncCompanyPlansRequestBody
     */
    planId?: string;
    /**
     * 
     * @type {Array<CreateOrUpdateCompanyPlanRequestBody>}
     * @memberof SyncCompanyPlansRequestBody
     */
    plans: Array<CreateOrUpdateCompanyPlanRequestBody>;
}

/**
 * Check if a given object implements the SyncCompanyPlansRequestBody interface.
 */
export function instanceOfSyncCompanyPlansRequestBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "plans" in value;

    return isInstance;
}

export function SyncCompanyPlansRequestBodyFromJSON(json: any): SyncCompanyPlansRequestBody {
    return SyncCompanyPlansRequestBodyFromJSONTyped(json, false);
}

export function SyncCompanyPlansRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncCompanyPlansRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyId': !exists(json, 'company_id') ? undefined : json['company_id'],
        'planId': !exists(json, 'plan_id') ? undefined : json['plan_id'],
        'plans': ((json['plans'] as Array<any>).map(CreateOrUpdateCompanyPlanRequestBodyFromJSON)),
    };
}

export function SyncCompanyPlansRequestBodyToJSON(value?: SyncCompanyPlansRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_id': value.companyId,
        'plan_id': value.planId,
        'plans': ((value.plans as Array<any>).map(CreateOrUpdateCompanyPlanRequestBodyToJSON)),
    };
}

