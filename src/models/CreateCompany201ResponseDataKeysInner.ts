/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCompany201ResponseDataKeysInner
 */
export interface CreateCompany201ResponseDataKeysInner {
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    entityId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    entityType: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    keyType: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    keyTypeId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    updatedAt: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompany201ResponseDataKeysInner
     */
    value: string;
}

/**
 * Check if a given object implements the CreateCompany201ResponseDataKeysInner interface.
 */
export function instanceOfCreateCompany201ResponseDataKeysInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "entityId" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "keyType" in value;
    isInstance = isInstance && "keyTypeId" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function CreateCompany201ResponseDataKeysInnerFromJSON(json: any): CreateCompany201ResponseDataKeysInner {
    return CreateCompany201ResponseDataKeysInnerFromJSONTyped(json, false);
}

export function CreateCompany201ResponseDataKeysInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCompany201ResponseDataKeysInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'],
        'entityId': json['entity_id'],
        'entityType': json['entity_type'],
        'environmentId': json['environment_id'],
        'id': json['id'],
        'keyType': json['key_type'],
        'keyTypeId': json['key_type_id'],
        'updatedAt': json['updated_at'],
        'value': json['value'],
    };
}

export function CreateCompany201ResponseDataKeysInnerToJSON(value?: CreateCompany201ResponseDataKeysInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.createdAt,
        'entity_id': value.entityId,
        'entity_type': value.entityType,
        'environment_id': value.environmentId,
        'id': value.id,
        'key_type': value.keyType,
        'key_type_id': value.keyTypeId,
        'updated_at': value.updatedAt,
        'value': value.value,
    };
}

