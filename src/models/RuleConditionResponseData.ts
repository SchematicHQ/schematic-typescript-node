/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RuleConditionResponseData
 */
export interface RuleConditionResponseData {
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    conditionType: string;
    /**
     * 
     * @type {Date}
     * @memberof RuleConditionResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    eventSubtype?: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    flagId: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    metricPeriod?: string;
    /**
     * 
     * @type {number}
     * @memberof RuleConditionResponseData
     */
    metricValue: number;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    operator: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RuleConditionResponseData
     */
    resourceIds: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    ruleId: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    traitEntityType?: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    traitId?: string;
    /**
     * 
     * @type {string}
     * @memberof RuleConditionResponseData
     */
    traitValue?: string;
    /**
     * 
     * @type {Date}
     * @memberof RuleConditionResponseData
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the RuleConditionResponseData interface.
 */
export function instanceOfRuleConditionResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "conditionType" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "flagId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "metricValue" in value;
    isInstance = isInstance && "operator" in value;
    isInstance = isInstance && "resourceIds" in value;
    isInstance = isInstance && "ruleId" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function RuleConditionResponseDataFromJSON(json: any): RuleConditionResponseData {
    return RuleConditionResponseDataFromJSONTyped(json, false);
}

export function RuleConditionResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleConditionResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditionType': json['condition_type'],
        'createdAt': (new Date(json['created_at'])),
        'environmentId': json['environment_id'],
        'eventSubtype': !exists(json, 'event_subtype') ? undefined : json['event_subtype'],
        'flagId': json['flag_id'],
        'id': json['id'],
        'metricPeriod': !exists(json, 'metric_period') ? undefined : json['metric_period'],
        'metricValue': json['metric_value'],
        'operator': json['operator'],
        'resourceIds': json['resource_ids'],
        'ruleId': json['rule_id'],
        'traitEntityType': !exists(json, 'trait_entity_type') ? undefined : json['trait_entity_type'],
        'traitId': !exists(json, 'trait_id') ? undefined : json['trait_id'],
        'traitValue': !exists(json, 'trait_value') ? undefined : json['trait_value'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function RuleConditionResponseDataToJSON(value?: RuleConditionResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'condition_type': value.conditionType,
        'created_at': (value.createdAt.toISOString()),
        'environment_id': value.environmentId,
        'event_subtype': value.eventSubtype,
        'flag_id': value.flagId,
        'id': value.id,
        'metric_period': value.metricPeriod,
        'metric_value': value.metricValue,
        'operator': value.operator,
        'resource_ids': value.resourceIds,
        'rule_id': value.ruleId,
        'trait_entity_type': value.traitEntityType,
        'trait_id': value.traitId,
        'trait_value': value.traitValue,
        'updated_at': (value.updatedAt.toISOString()),
    };
}

