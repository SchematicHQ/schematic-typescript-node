/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuleConditionResponseData } from './RuleConditionResponseData';
import {
    RuleConditionResponseDataFromJSON,
    RuleConditionResponseDataFromJSONTyped,
    RuleConditionResponseDataToJSON,
} from './RuleConditionResponseData';

/**
 * 
 * @export
 * @interface FlagRuleDetailResponseData
 */
export interface FlagRuleDetailResponseData {
    /**
     * 
     * @type {Array<RuleConditionResponseData>}
     * @memberof FlagRuleDetailResponseData
     */
    conditions: Array<RuleConditionResponseData>;
    /**
     * 
     * @type {Date}
     * @memberof FlagRuleDetailResponseData
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof FlagRuleDetailResponseData
     */
    environmentId: string;
    /**
     * 
     * @type {string}
     * @memberof FlagRuleDetailResponseData
     */
    flagId: string;
    /**
     * 
     * @type {string}
     * @memberof FlagRuleDetailResponseData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FlagRuleDetailResponseData
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof FlagRuleDetailResponseData
     */
    priority: number;
    /**
     * 
     * @type {Date}
     * @memberof FlagRuleDetailResponseData
     */
    updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof FlagRuleDetailResponseData
     */
    value: boolean;
}

/**
 * Check if a given object implements the FlagRuleDetailResponseData interface.
 */
export function instanceOfFlagRuleDetailResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "conditions" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "environmentId" in value;
    isInstance = isInstance && "flagId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "priority" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function FlagRuleDetailResponseDataFromJSON(json: any): FlagRuleDetailResponseData {
    return FlagRuleDetailResponseDataFromJSONTyped(json, false);
}

export function FlagRuleDetailResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlagRuleDetailResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': ((json['conditions'] as Array<any>).map(RuleConditionResponseDataFromJSON)),
        'createdAt': (new Date(json['created_at'])),
        'environmentId': json['environment_id'],
        'flagId': json['flag_id'],
        'id': json['id'],
        'name': json['name'],
        'priority': json['priority'],
        'updatedAt': (new Date(json['updated_at'])),
        'value': json['value'],
    };
}

export function FlagRuleDetailResponseDataToJSON(value?: FlagRuleDetailResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': ((value.conditions as Array<any>).map(RuleConditionResponseDataToJSON)),
        'created_at': (value.createdAt.toISOString()),
        'environment_id': value.environmentId,
        'flag_id': value.flagId,
        'id': value.id,
        'name': value.name,
        'priority': value.priority,
        'updated_at': (value.updatedAt.toISOString()),
        'value': value.value,
    };
}

